<?xml version="1.0" encoding="utf-8"?>
<topic id="c701191d-03b6-4610-9ae8-24419801bdd0" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>This topic dives into the origins of the term Ontology and introduces the use of hierarchy as the way to define Ontology.</para>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
	  <section address="OntologyOrigins">
		  <title>Ontology Origins</title>
		  <content>
			  <para>
				  The term <legacyBold>Ontology</legacyBold> originally came from Greek language:
			  </para>

			  <para>
				  <legacyItalic>Ontos + Logia</legacyItalic>
			  </para>

			  <para>
				  (Gk) <legacyItalic>“being” + “the study of”</legacyItalic>
			  </para>

			  <para>
				  An ontology is a categorization of the world. One of the earliest Ontological concepts came from Plato: Platonic realism. It is the idea that everything that exists in reality has a corresponding conceptual truth that the extant thing is aspiring to be:
			  </para>

			  <list class="bullet">
				  <listItem>
					  <para>
						  There is a universal notion of ‘apple-ness’ that a real apple aspires to be
					  </para>
				  </listItem>

				  <listItem>
					  <para>
						  This is one implementation of the idea that things in reality can have conceptual counterparts that are used to categorize them
					  </para>
				  </listItem>
			  </list>

			  <para>
				  This framework is mimicked in most Ontologies across the world.
			  </para>

			  <para>
				  Some of the inspiring examples of well-known ontologies include the Periodic Table of the Elements, Linnaean taxonomy or Latin naming system for animals.
			  </para>

			  <para>
				  The latter one is a useful example of an Ontology because we can see how Ontologies are frequently ordered hierarchically.
			  </para>
		  </content>
	  </section>

	  <section address="OntologyHierarchy">
		  <title>Ontology and Hierarchy</title>
		  <content>
			  <para>
				  A hierarchy is a nice way to order concepts. Here we will re-use a simple explanation of ontology from the
				  <externalLink>
					  <linkText>Practice Example 13.A</linkText>
					  <linkAlternateText>Part of the Exercises provided as part of Tools for Learning Artificial Intelligence at AISpace.org</linkAlternateText>
					  <linkUri>http://www.aispace.org/exercises/exercise13-a-1.shtml</linkUri>
				  </externalLink>
				  , an exercise published on the AISpace.org, to provide an illustration of hierarchy use to build an ontology for pizzas.
			  </para>

			  <para>
				  Here is a reference describing the Web Ontology Language (OWL). Consider the following visualization of a OWL ontology:
			  </para>

			  <mediaLink>
				  <image xlink:href="pizza2" placement="center"/>
			  </mediaLink>

			  <para>
				  Each word in the figure is a class and the arrows represent subclasses (e.g. Tomato is a subclass of Vegetable). Note that some of the class names in this ontology are purposefully misleading (for the purposes of this exercise).
			  </para>

			  <para>
				  These same concepts can be (and are) applied to other domains. For example, when organizations model their world, they care about how different objects (notably people) fit into a hierarchy.
			  </para>
		  </content>
	  </section>

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
