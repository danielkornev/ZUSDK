<?xml version="1.0" encoding="utf-8"?>
<topic id="0fe31055-eea4-4dfe-bdcc-d11743749678" revisionNumber="1">
	<developerSDKTechnologyOverviewArchitectureDocument
	  xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
	  xmlns:xlink="http://www.w3.org/1999/xlink">

		<!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

		<introduction>
			<!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
			<!-- <autoOutline /> -->

			<para>Zet Universe consists of the following components:</para>

			<list class="bullet">
				<listItem>
					<para>
						Zet Universe User Experience
					</para>
				</listItem>


				<listItem>
					<para>
						Zet Universe Core, including plugins host, management, search, and APIs
					</para>
				</listItem>

				<listItem>
					<para>
						Semantic Processing Pipeline
					</para>
				</listItem>

				<listItem>
					<para>
						Cloud Services
					</para>
				</listItem>

				<listItem>
					<para>
						Apps
					</para>
				</listItem>

				<listItem>
					<para>
						Semantic Processors
					</para>
				</listItem>

				<listItem>
					<para>
						Indexing Services
					</para>
				</listItem>

				<listItem>
					<para>
						Semantic Model
					</para>
				</listItem>

				<listItem>
					<para>
						Storage Services
					</para>
				</listItem>
			</list>

			<para>The following figure gives a graphical view of the building blocks in these components.
			</para>

			<mediaLink>
				<caption>Conceptual Architecture</caption>
				<image xlink:href="ZUConceptualArchitecture"></image>
			</mediaLink>
		</introduction>

		<!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
		<section address="ZetUniverseCore">
			<title>Zet Universe Core</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>Zet Universe Core is made up of the core services that you would expect from the knowledge management system. Think of Zet Universe Core as the fundamentals, which includes plugin host infrastructure, search engine, management, and other services. As a developer, you write to APIs. Zet Universe includes a rich managed API that you can use to program the different building blocks of the Zet Universe System, including data operations, semantic pipeline, and the semantic model.</para>
			</content>
		</section>

		<section address="SemanticPipeline">
			<title>Semantic Processing Pipeline</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>
					Semantic Processing Pipeline provides all required services for extracting, analyzing, and enriching the data to transform it into the actionable knowledge.
				</para>
			</content>
		</section>

		<section address="CloudServices">
			<title>Cloud Services</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>
					Cloud services provide a wide variety of services to the Zet Universe, including but not limited to central authentication (based on OAuth 2.0), notifications infrastructure for the built-in plugins, data synchronization, collaboration, and other services.
				</para>
			</content>
		</section>

		<section address="Apps">
			<title>Apps</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>
					Apps are one of the two currently available kinds of plugins. A typical app provides services for data import from the external data sources, such as e-mail, documents, relational and NoSQL databases, etc. Apps also enable users to keep local and remote data sources in sync, as well as further enrich data. Apps can (but don't have to) bring Semantic Processors with them, to enable semi-automated data analysis and enrichness.
				</para>
			</content>
		</section>

		<section address="SemanticProcessors">
			<title>Semantic Processors</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>
					Semantic Processors are the second of the two currently available kinds of plugins. A typical semantic processor can be used to classify all or selected incoming data, enrich it by extracting keyphrases and entities, and provide recommendations to the user based on interests, content, context, relationships, or other criteria. 
				</para>
			</content>
		</section>

		<section address="IndexingServices">
			<title>Indexing Services</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>
					Indexing Services maintain references to Kinds and are used in the variety of queries, including but no limited to full-text search, spatio-temporal, and other kinds of queries.
				</para>
			</content>
		</section>



		<section address="SemanticModel">
			<title>Semantic Model</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>Zet Universe semantic model provides some of the technical innovations of Zet Universe, including <legacyBold>entities</legacyBold>, dynamic <legacyBold>properties</legacyBold>, <legacyBold>relationships</legacyBold>, <legacyBold>model</legacyBold> containers, and the ability to extend the built-in <legacyBold>ontology</legacyBold>  of the everyday <legacyBold>kinds</legacyBold>  of data. Zet Universe includes kinds for everyday information such as documents, e-mail, appointments, tasks, media (audio and video), annotations, and so on. Zet Universe includes kinds for everyday information such as documents, e-mail, appointments, tasks, media (audio and video), annotations, and so on.
				</para>
			</content>
		</section>

		<section address="StorageServices">
			<title>Storage Services</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>Zet Universe storage services provide the standardized ways for entity storage and retrieval.</para>
			</content>
		</section>

		<!--<section address="StorageServices">
			<title>Storage Services</title>
			<content>
				--><!-- Uncomment this to create a sub-section outline
        <autoOutline /> --><!--
				<para>Zet Universe plugin platform provides extension points to further extend Zet Universe's capabilities in working with new data sources, understanding new kinds of data, analyzing new and existing kinds of data. These plugins sit on top of Zet Universe to help you to adapt Zet Universe to your needs, or the needs of your company and/or of your customers.</para>
			</content>
		</section>-->

		<!--<section address="APIs">
			<title>Services</title>
			<content>
				--><!-- Uncomment this to create a sub-section outline
        <autoOutline /> --><!--
				<para>As a developer, you write to APIs. Zet Universe includes a rich managed API that you can use to program the different building blocks of the Zet Universe System, including data operations, semantic pipeline, and the data model.</para>
			</content>
		</section>-->

		<relatedTopics>
			<!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
		</relatedTopics>
	</developerSDKTechnologyOverviewArchitectureDocument>
</topic>
