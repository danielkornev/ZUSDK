<?xml version="1.0" encoding="utf-8"?>
<topic id="bf16b1ea-d376-468a-a5c2-e261bdd5f345" revisionNumber="1">
  <developerWhitePaperDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <byline>
      <para>Daniel Kornev</para>
    </byline>

    <date>
      <para>May 2016</para>
    </date>

    <summarySection>
      <content>
        <!--<para>Summary content</para>-->
      </content>
    </summarySection>

    <!-- <downloadCenterLink>Optional info about downloadable content</downloadCenterLink> -->

    <!-- <appliesTo>Optional "applies to" info</appliesTo> -->

    <!-- <contents>Optional contents info</contents> -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
       <autoOutline />

		<para>
			Zet Universe platform (cloud + client) enables <legacyBold>Data Integration, Organization, Search, and Analysis</legacyBold> of the end user and enterprise content. The following essential functions are required:
		</para>

		<list class="bullet">
			<listItem>
				<para>
					<legacyBold>[both] Store</legacyBold> user-defined metadata (projects) and data (from external data sources)
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[both] Aggregate</legacyBold> data from external data sources into user-defined projects
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[both] Analyze</legacyBold> (derive and extract) meaningful <legacyBold>kinds</legacyBold> and <legacyBold>properties</legacyBold> from data
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[both] Index</legacyBold> kinds and properties
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[both] Annotate</legacyBold> kinds with (semantic) markup
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[client] Search</legacyBold> kinds using terms, phrases, time intervals, locations, and exemplars
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[both] Enable collaborative work</legacyBold> on user-defined projects
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[cloud] Map</legacyBold> user-defined knowledge graphs together
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[cloud] Build and grow</legacyBold> unified enterprise knowledge graph
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[both] Manage</legacyBold> system state, configuration, performance, and other administrative tasks
				</para>
			</listItem>

			<listItem>
				<para>
					<legacyBold>[both] Act</legacyBold> on kinds in semantically appropriate ways
				</para>
			</listItem>

		</list>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="InformationModel">
      <title>1. Information Model</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>The Zet Universe is built from a small foundation of concepts: <legacyBold>Agents</legacyBold>, <legacyBold>Models</legacyBold>, <legacyBold>Entities and Kinds</legacyBold>, <legacyBold>Properties</legacyBold>, <legacyBold>Relationships</legacyBold>, <legacyBold>Apps</legacyBold>, and <legacyBold>Processors</legacyBold>.</para>
      </content>

		<sections>
			<section address="Agents">
				<title>1.1. Agents</title>
				<content>
					<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					<para>
						<legacyBold>Agents</legacyBold> represent real people, as well as artificial intelligence systems that operate within the Zet Universe platform. Artificial intelligence systems are generally represented as the installed apps/accounts.
					</para>
				</content>
			</section>

			<section address="Models">
				<title>1.2. Models</title>
				<content>
					<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					<para>
						<legacyBold>Models</legacyBold> are <legacyBold>Agent</legacyBold>- or <legacyBold>App</legacyBold>-generated containers designed to be a place for data integration, organization, and analysis. For the end users, <legacyBold>Models</legacyBold> can be seen as the workspaces for their projects, while <legacyBold>Apps</legacyBold> use <legacyBold>Models</legacyBold> to obtain and synchronize external data, to make it available for the end users. <legacyBold>Models</legacyBold> contain collections of instances of <legacyBold>Kinds</legacyBold>.
					</para>
				</content>
			</section>

			<section address="Kinds">
				<title>1.3. Entities and Kinds</title>
				<content>
					<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					<para>
						<legacyBold>Knowledge</legacyBold> within the Zet Universe is <legacyBold>represented</legacyBold> as <legacyBold>entities</legacyBold> on storage level and <legacyBold>kinds</legacyBold> on ontology level. 
					</para>

					<para>
						Entity is the "atom" of information within Zet Universe. It incapsulates information about any kind of the everyday things like people, documents, e-mail, and so on. A special property, <legacyBold>Kind</legacyBold>, is used to characterize the semantic meaning of the particular Entity. Entities are <legacyBold>extracted</legacyBold> and/or derived from the provided data sources or <legacyBold>emergent</legacyBold> from collections of entities and properties.
					</para>

					<para>
						While Entity is a practical implementation of the Zet Universe foundational data type, Kind could be seen as both a classification term used to describe a particular Entity, and as an element of the ontology which is a mechanism used to build a categorization of the everyday things, as well as the specific domains (think Customers in CRM). 	<legacyBold>Kinds</legacyBold> are flexible representations of both every day and enterprise-specific things: <legacyBold>people</legacyBold>, <legacyBold>organizations</legacyBold>, <legacyBold>places</legacyBold>, <legacyBold>events</legacyBold>, <legacyBold>media</legacyBold>, etc. 
					</para>
				</content>
			</section>


			<section address="Properties">
				<title>1.4. Properties</title>
				<content>
					<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					<para>
						Derived, extracted, or user-supplied <legacyBold>data about kinds</legacyBold> and/or their underlying data sources are provided in two forms: common properties (available for all <legacyBold>Kinds</legacyBold>), and dynamic properties.
					</para>
				</content>
			</section>

			<section address="Relationships">
				<title>1.5. Relationships</title>
				<content>
					<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					<para>
						Relationships represent connections between instances of <legacyBold>Kinds</legacyBold>, and, like Properties, they are derived, extracted, or user-supplied. Relationships are stored with the instances of Kinds as references to other instances.
					</para>
				</content>
			</section>

			<section address="Apps">
				<title>1.6. Apps</title>
				<content>
					<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					<para>
						Content is provided to the system via external data providers (<legacyBold>apps</legacyBold>) and is represented by a <legacyBold>Kind</legacyBold>. <legacyBold>Apps</legacyBold> connect Zet Universe to the external data sources (local and network file systems, web, microservices, etc.), enable initial data transformation and load, as well as allow (optional) source change tracking, and (optional) metadata synchronization. <legacyBold>App</legacyBold> may register own <legacyBold>Processors</legacyBold> (see below), <legacyBold>Kinds</legacyBold>’ and <legacyBold>Relationships</legacyBold>’ definitions. Support is provided (minimally) for file-based documents (local and Dropbox-based), images, audio, video, people (Dropbox users), web (HTML).
					</para>

					<para>
						Additional <legacyBold>kinds</legacyBold>, <legacyBold>apps</legacyBold> and <legacyBold>processors</legacyBold> can be added to the system.
					</para>
				</content>
			</section>

			<section address="Processors">
				<title>1.7. Processors</title>
				<content>
					<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					<para>
						Content within <legacyBold>Kinds</legacyBold> is processed via the means of the so-called <legacyBold>Semantic Pipeline</legacyBold> (see below), which provides a topic subscription service, and both the platform and plugins can subscribe to this service, specify a topic (or topics) they are interested in, process incoming instances of <legacyBold>Kinds</legacyBold>, and (optionally) publish updated instances of <legacyBold>Kinds</legacyBold> back to the <legacyBold>Semantic Pipeline</legacyBold>. There are two kinds of subscribers – lightweight (that can process data in an almost synchronous way) and heavy (that usually spend significant time to analyze and process data). Both kinds of subscribers are usually defined in the form of <legacyBold>Processors</legacyBold>, that are packaged either as part of <legacyBold>Apps</legacyBold>, or independently.
					</para>
				</content>
			</section>
		</sections>
    </section>

	 

	 

	  <section address="Architecture">
		  <title>2. Architecture</title>
		  <content>
			  <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
			  <para>
				  The Zet Universe platform is <legacyBold>deployed</legacyBold> as a combination of cloud and client systems working in a tandem. Cloud and client systems work together via a combination of REST application interfaces (for non-critical data synchronization) and Web Sockets (for near real-time collaboration).
			  </para>
		  </content>

		  <sections>
			  <section address="Client">
				  <title>2.1. Client</title>
				  <content>
					  <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					  <para>
						  Current (Windows-based) and future (Web, mobile, AR/VR) client applications are the end user interface to the Zet Universe Platform. Two kinds of clients, lightweight and full, will be available as a part of the platform:
					  </para>

					  <list class="bullet">
						  <listItem>
							  <para>
								  <legacyBold>Full clients</legacyBold> include both the user interface and everything necessary for offline data integration, indexing, and analysis
							  </para>
						  </listItem>

						  <listItem>
							  <para>
								  <legacyBold>Lightweight clients</legacyBold> provide only the user interface and can be (optionally) enhanced by the additional plugins.
							  </para>
						  </listItem>
					  </list>

				  </content>
			  </section>

			  <section address="Cloud">
				  <title>2.2. Cloud</title>
				  <content>
					  <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
					  <para>
						  Cloud component of the Zet Universe platform is a (scalable) unit <legacyBold>deployable</legacyBold> in both private and public clouds. Its primary goals are to provide:
					  </para>

					  <list class="bullet">
						  <listItem>
							  <para>
								  <legacyBold>Metadata storage</legacyBold> for storing knowledge represented in the form of <legacyBold>Kinds</legacyBold>.
							  </para>
						  </listItem>

						  <listItem>
							  <para>
								  <legacyBold>BLOB storage</legacyBold> for storing supplemental (thumbnails, etc.) to <legacyBold>Kinds</legacyBold> and (optionally) external content (files, emails, etc.).
							  </para>
						  </listItem>

						  <listItem>
							  <para>
								  <legacyBold>Near real-time subscription service</legacyBold> to enable seamless collaboration options for <legacyBold>Agents</legacyBold> working with the shared projects <legacyBold>Models</legacyBold>.
							  </para>
						  </listItem>

						  <listItem>
							  <para>
								  <legacyBold>Simple authorization and authentication subsystem (OAuth 2.0-based).</legacyBold>
							  </para>
						  </listItem>

						  <listItem>
							  <para>
								  <legacyBold>Semantic pipeline</legacyBold> and <legacyBold>Processors</legacyBold> infrastructure for data analysis (deriving and extracting <legacyBold>Kinds</legacyBold>, <legacyBold>Properties</legacyBold>, and <legacyBold>Relationships</legacyBold>).
							  </para>
						  </listItem>

						  <listItem>
							  <para>
								  <legacyBold>Apps infrastructure</legacyBold> for external data extraction, load, and transformation (ETL).
							  </para>
						  </listItem>

						  <listItem>
							  <para>
								  <legacyBold>Ontology management infrastructure</legacyBold> for graphs generation, editing, growth, and mapping based on the individual <legacyBold>Agents</legacyBold>' contribution via their own projects (<legacyBold>Models</legacyBold>) in the "Friend-to-Friend" way.
							  </para>
						  </listItem>
					  </list>
				  </content>
			  </section>
		  </sections>
	  </section>

    <!-- <codeExample>Optional code example.</codeExample> -->

    <conclusion>
      <content>
        <para>Zet Universe is an innovation platform (cloud + client) that enables Data Integration, Organization, Search, and Analysis of enterprise content.</para>
      </content>
    </conclusion>

    <relatedTopics>
		<link topicType_id="1FE70836-AA7D-4515-B54B-E10C4B516E50" xlink:href="f1ae560b-ba87-4f1d-a8e7-1ec9020c9b2b">Zet Universe APIs</link>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>

    <!-- <additionalInformation>Optional additional info</additionalInformation> -->

    <!-- <authorBio>Optional author bio</authorBio> -->

  </developerWhitePaperDocument>
</topic>
